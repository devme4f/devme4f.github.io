<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>memshell on devme4f&#39;s blog</title>
    <link>https://devme4f.github.io/tags/memshell/</link>
    <description>Recent content in memshell on devme4f&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>vi-vn</language>
    <lastBuildDate>Tue, 31 Dec 2024 19:56:07 +0700</lastBuildDate><atom:link href="https://devme4f.github.io/tags/memshell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Level-up Java Memshell - Facing Tomcat Compatibility Problems</title>
      <link>https://devme4f.github.io/posts/2024/java-memshell-facing-tomcat-compatibility/</link>
      <pubDate>Tue, 31 Dec 2024 19:56:07 +0700</pubDate>
      
      <guid>https://devme4f.github.io/posts/2024/java-memshell-facing-tomcat-compatibility/</guid>
      <description>The knowledge is endless, don&amp;rsquo;t just learn it, do it
preface Trước đây mình đã viết một bài khá basic về 3 loại memshell trên tomcat, đây vẫn chưa phải tất cả các thành phần có thể lợi dụng, còn các loại khác như Valve, Executor, Poller, Http11NioProtocol,&amp;hellip; (chưa kể framework như spring hay các webserver servlet khác) nhưng để phân loại theo các cách inject vào memory từ exec code, ta có ba loại:</description>
    </item>
    
    <item>
      <title>Quick Note Spring Memshell</title>
      <link>https://devme4f.github.io/posts/2023/quick-note-spring-memshell/</link>
      <pubDate>Tue, 19 Sep 2023 21:50:22 +0700</pubDate>
      
      <guid>https://devme4f.github.io/posts/2023/quick-note-spring-memshell/</guid>
      <description>Preface Một vài mẫu note rời rạc về spring memory webshell mà mình đã dành thời gian tìm hiểu chưa có thời gian viết hoàn thiện
Spring boot Maven: https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
spring boot &amp;lt; 2.x =&amp;gt; test ok (2.4.10, 2.5.14, 2.7.15) spring boot 3.x (support jdk &amp;gt;= 17) =&amp;gt; not ok do jdk ver cao Dynamically set RequestMappings in Spring (at runtime) Lấy WebApplicationContext Key khi inject memshell trong spring là lấy được WebApplicationContext</description>
    </item>
    
  </channel>
</rss>
